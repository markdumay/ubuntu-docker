---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#
#   Author: David Moreau Simard <dms@redhat.com>
#
#   Adapted by Mark Dumay on January 22nd, 2021.
#
#   Modifications to original source:
#   - Adjusted formatting style of Ansible code
#   - Replaced ansible_port with sshd_port
#   - Changed order of checks, use port 22 as fallback
#   - Replaced inventory_hostname with ansible_host
#   - Removed RHEL-specific configuration
#
# Check if we're able to reach {{ inventory_host }} on {{ sshd_port }} provided
# by the playbook from localhost
- name: Validate host is reachable on playbook-defined SSH port
  wait_for:
    port: "{{ sshd_port }}"
    state: "started"
    host: "{{ ansible_host }}"
    connect_timeout: 5
    timeout: 10
  delegate_to: localhost
  ignore_errors: yes
  register: configured_ssh

# If {{ sshd_port }} is reachable, we don't need to do anything special
- name: SSH port is configured properly
  set_fact:
    ansible_ssh_port: "{{ sshd_port }}"
  when: configured_ssh is defined and
        configured_ssh.state is defined and
        configured_ssh.state == "started"
  register: ssh_port_set

# From localhost, check if we're able to reach {{ inventory_hostname }} on
# port 22 if {{ sshd_port }} is unreachable
- name: Validate host is reachable on default SSH port
  wait_for:
    port: 22
    state: started
    host: "{{ ansible_host }}"
    connect_timeout: 5
    timeout: 10
  delegate_to: localhost
  ignore_errors: yes
  when: configured_ssh is undefined or configured_ssh.state is undefined or configured_ssh.state != "started"
  register: default_ssh

# If reachable on default SSH port, continue the following tasks with this port
- name: Set inventory ansible_port to default
  set_fact:
    ansible_ssh_port: 22
  when: default_ssh is defined and
        default_ssh.state is defined and
        default_ssh.state == "started"
  register: ssh_port_set

# If the SSH port is neither the default or the configured, give up
- name: Fail if SSH port was not auto-detected (unknown)
  fail:
    msg: "Cannot reach host on either SSH port or {{ sshd_port }}"
  when: ssh_port_set is undefined

- name: Configure preferred SSH port
  become: yes
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^Port"
    line: "Port {{ sshd_port|int }}"
  notify: "restart sshd"

# We notified "Restart sshd" if we modified the sshd config.
# By calling flush_handlers, we make sure the handler is run *right now*
- name: Ensure SSH is reloaded if need be
  meta: flush_handlers

# We're done, make sure ansible_port is set properly so that any tasks
# after this use the right ansible_port.
- name: Ensure we use the configured SSH port for the remainder of the role
  set_fact:
    ansible_ssh_port: "{{ sshd_port }}"

# Sanity check, make sure Ansible is able to connect to the host
- name: Confirm host connection works
  ping:

# Run setup to gather facts here once the SSH port is set up
- name: Run deferred setup to gather facts
  setup:
...